(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{"5dM6":function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/examples/basic-graph",function(){return t("oGUj")}])},oGUj:function(n,e,t){"use strict";t.r(e);var o=t("z3IF"),r=t("2Fjn"),a=t("mXGw"),i=t.n(a),p=t("SAVP"),c=t("qImK"),s=t("H3Hr"),u=t("8foj"),d=i.a.createElement,h=Object(s.a)({normalizeConnections:!0,autoConnectionId:!0,extractBoxesFromNodes:!0,layout:!0,autoViewportSize:!0}),m=function(n){var e=n.box;return d("rect",e)};t.d(e,"default",function(){return y});i.a.createElement;var x={},g="wrapper",b=Object(p.a)("h1",null,"Basic Graph"),w=Object(p.a)(c.a,{code:"import React from 'react';\nimport { graph } from '@regraph/graph';\nimport { Line } from '@regraph/connections';\n\nconst Graph = graph({\n  normalizeConnections: true,\n  autoConnectionId: true,\n  extractBoxesFromNodes: true,\n  layout: true,\n  autoViewportSize: true,\n});\n\nconst Rect = ({ box }) => <rect {...box} />;\n\nexport default () => (\n  <Graph\n    node={{ type: Rect }}\n    nodes={[\n      { id: 'ping', box: { x: 50, y: 40, width: 20, height: 20 } },\n      { id: 'pong', box: { x: 150, y: 40, width: 20, height: 20 } },\n    ]}\n    connections={[\n      {\n        type: Line,\n        src: 'ping',\n        dst: 'pong',\n      },\n    ]}\n  />\n);\n",output:Object(p.a)(function(){return d(h,{node:{type:m},nodes:[{id:"ping",box:{x:50,y:40,width:20,height:20}},{id:"pong",box:{x:150,y:40,width:20,height:20}}],connections:[{type:u.a,src:"ping",dst:"pong"}]})},{mdxType:"Graph"}),path:"examples/basic-graph/index.jsx",sourceOpen:!0,mdxType:"Example"});function y(n){var e=n.components,t=Object(r.a)(n,["components"]);return Object(p.a)(g,Object(o.a)({},x,t,{components:e,mdxType:"MDXLayout"}),b,w)}y.isMDXComponent=!0}},[["5dM6",1,0]]]);